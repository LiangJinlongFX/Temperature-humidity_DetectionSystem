C51 COMPILER V9.56.0.0   MAIN                                                              01/05/2019 01:20:21 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Program Files\MDK\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\STC8051_Detect
                    -ionSystem) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "sys.h"
   2          #include "uart.h"
   3          #include "DHT11.h"
   4          #include "lcd1602.h"
   5          #include "stc89c5xrc.h"
   6          
   7          u8 TimerISR_Count=0;
   8          u8 Global_LinkID;
   9          u8 Global_RevDataSize;
  10          DHT11Data_Type Global_DHT11Structure;
  11          sbit Switch = P2^3;
  12          void Response_Process(char Request_Type,DHT11Data_Type *pp);
  13          
  14          void main(void)
  15          {
  16   1        char Request_Type;
  17   1        u8 temp;
  18   1        unsigned long i=0;
  19   1        
  20   1        // 初始化LCD1602
  21   1        LCD1602_Init();
  22   1        // 初始化串口
  23   1        Uart_Init();
  24   1        // 串口中断设置为最高优先级
  25   1        PS = 1;
  26   1        // 开启全局中断
  27   1        EA = 1;
  28   1        
  29   1        // 显示启动信息
  30   1        LCD1602_DisplayString(5,0,"Welcome");
  31   1        LCD1602_DisplayString(3,1,"ChenJiandong");
  32   1        
  33   1        // AT指令设置ESP8266 TCP Server
  34   1        delay_ms(3000);
  35   1        Uart_SendString("ATE0\r\n");  //关闭指令回显
  36   1        delay_ms(100);
  37   1        Uart_SendString("AT+CIPMUX=1\r\n"); //使能TCP多连接
  38   1        delay_ms(100);
  39   1        Uart_SendString("AT+CIPSERVER=1,8000\r\n"); //建立TCP服务器,监听端口8000
  40   1        delay_ms(100);
  41   1        Uart_SendString("AT+CIPSTO=600\r\n"); //建立超时时间
  42   1        delay_ms(100);
  43   1        
  44   1        // 显示温湿度显示界面
  45   1        LCD1602_Clear();
  46   1        LCD1602_DisplayString(2,0,"TEMP:  .  ^C");
  47   1        LCD1602_DisplayString(3,1,"RH :  .  %");
  48   1        while(1)
  49   1        {
  50   2          if(Global_UartRev_Flag)
  51   2          {
  52   3            Global_UartRev_Flag = 0;  //复位接收标记
  53   3            Global_LinkID = Global_UartBuffer[7] - '0'; //获取请求的客户端ID
  54   3            Request_Type = Global_UartBuffer[11];   //获取请求类型
C51 COMPILER V9.56.0.0   MAIN                                                              01/05/2019 01:20:21 PAGE 2   

  55   3            Response_Process(Request_Type,&Global_DHT11Structure);
  56   3            Global_UartRev_Count = 0; //清除缓冲计数
  57   3            ES = 1;
  58   3          }
  59   2          i++;
  60   2          if(i>50000)
  61   2          {
  62   3            i=0;
  63   3            temp = DHT11_ReadData(&Global_DHT11Structure);
  64   3            if(!temp)
  65   3            {
  66   4      //        Response_Process(1,&Global_DHT11Structure);
  67   4              LCD1602_DisplayData(&Global_DHT11Structure);
  68   4            }
  69   3          }
  70   2        }
  71   1      }
  72          
  73          void Response_Process(char Request_Type,DHT11Data_Type *pp)
  74          {
  75   1        char payload[10];
  76   1        
  77   1        if(Request_Type == 1)
  78   1        {
  79   2          payload[0] = 0x88;  //响应数据类型
  80   2          payload[1] = pp->T_H; //湿度整数位
  81   2          payload[2] = pp->T_L; //湿度小数位
  82   2          payload[3] = pp->RH_H;    //温度整数位
  83   2          payload[4] = pp->RH_L;    //温度小数位
  84   2          payload[5] = 23;  //温湿度校验位
  85   2          payload[6] = 0x00;  //填充字符'\0'
  86   2          Uart_SendString("AT+CIPSEND=");
  87   2          Uart_SendChar(Global_LinkID+'0');
  88   2          Uart_SendString(",6\r\n");
  89   2          delay_ms(10);
  90   2          //Uart_SendString(payload);
  91   2          Uart_SendChar(payload[0]);
  92   2          Uart_SendChar(payload[1]);
  93   2          Uart_SendChar(payload[2]);
  94   2          Uart_SendChar(payload[3]);
  95   2          Uart_SendChar(payload[4]);
  96   2          Uart_SendChar(payload[5]);
  97   2          
  98   2        }
  99   1        else if(Request_Type == 2)
 100   1        {
 101   2          Switch = ~Switch;
 102   2          payload[0] = 0x89;  //响应数据类型
 103   2          if(Switch)
 104   2            payload[1] = 2;
 105   2          else
 106   2            payload[1] = 1;
 107   2          payload[2] = 0x00;  //填充字符'\0'
 108   2          Uart_SendString("AT+CIPSEND=");
 109   2          Uart_SendChar('0'+Global_LinkID);
 110   2          Uart_SendString(",2\r\n");
 111   2          delay_ms(50);
 112   2          Uart_SendString(payload);
 113   2        }
 114   1      }
 115          
 116          
C51 COMPILER V9.56.0.0   MAIN                                                              01/05/2019 01:20:21 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    495    ----
   CONSTANT SIZE    =    126    ----
   XDATA SIZE       =      8      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
